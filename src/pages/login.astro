<html>
  <body>
    <h1>Connexion</h1>
    <form id="loginForm">
      <input name="email" type="email" placeholder="Email" required /><br />
      <input
        name="password"
        type="password"
        placeholder="Mot de passe"
        required
      /><br />
      <button>Se connecter</button>
      <button id="googlelogin">Se connecter avec Google</button>
      <button id="githublogin">
  <svg
    class="btnicon"
    viewBox="0 0 24 24"
    aria-hidden="true"
    focusable="false"
  >
    <path
      fill="currentColor"
      d="M12 2C6.5 2 2 6.5 2 12c0 4.4 2.9 8.1 6.8 9.4.5.1.7-.2.7-.5v-2c-2.8.6-3.4-1.3-3.4-1.3-.4-1-1-1.3-1-1.3-.8-.6.1-.6.1-.6.9.1 1.4.9 1.4.9.8 1.4 2.2 1 2.7.8.1-.6.3-1 .5-1.2-2.2-.3-4.5-1.1-4.5-4.9 0-1.1.4-2 1-2.7-.1-.3-.4-1.3.1-2.7 0 0 .8-.3 2.8 1 .8-.2 1.6-.3 2.4-.3s1.6.1 2.4.3c2-1.3 2.8-1 2.8-1 .5 1.4.2 2.4.1 2.7.6.7 1 1.6 1 2.7 0 3.8-2.3 4.6-4.5 4.9.3.3.5.8.5 1.6v2.3c0 .3.2.6.7.5C19.1 20.1 22 16.4 22 12c0-5.5-4.5-10-10-10z"
    ></path>
  </svg>
  <span class="btntext">Se connecter avec GitHub</span>
</button>

    </form>
    <p id="msg"></p>
    <p>Pas encore de compte ? <a href="/register">S'inscrire</a></p>

    <script type="module">
      const { pb } = await import("/lib/pb.js");

      const form = document.getElementById("loginForm");
      form.onsubmit = async (e) => {
        e.preventDefault();
        try {
          await pb
            .collection("users")
            .authWithPassword(form.email.value, form.password.value);
          //verifiez si l'email est verifié
          if (pb.authStore.isVerified === false) {
            document.getElementById("msg").textContent =
              "Veuillez vérifier votre email avant de continuer.";
            return;
          }
          location.href = "/students";
        } catch (err) {
          document.getElementById("msg").textContent = "Échec de connexion";
          console.error(err);
        }
      };
      const githublogin = document.getElementById("githublogin");
githublogin.onclick = async () => {
  try {
    await pb.collection("users").authWithOAuth2({ provider: 'github' });
    location.href = "/students";
  } catch (err) {
    document.getElementById("msg").textContent = "Échec de connexion GitHub";
    console.error(err);
  }
};

      const googlelogin = document.getElementById("googlelogin");
      googlelogin.onclick = async () => {
        try {
          await pb.collection("users").authWithOAuth2({ provider: "google" });
          location.href = "/students";
        } catch (err) {
          document.getElementById("msg").textContent =
            "Échec de connexion Google";
          console.error(err);
        }
      };
    </script>
  </body>
</html>
